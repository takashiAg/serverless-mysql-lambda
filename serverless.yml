service: serverless-mysql-typeorm
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ${self:custom.region}
  httpApi:
    cors:
      allowedOrigins:
        - https://*
        - http://*
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
      allowCredentials: true
      exposedResponseHeaders:
        - Special-Response-Header
      maxAge: 6000 # In seconds

custom:
  webpack:
    includeModules: true
  default_stage: dev
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.default_stage}
  db_id: serverless-mysql-lambda-typeorm-example

resources:
  Resources:
    SecretAurora:
      Type: AWS::SecretsManager::Secret
      Properties:
        GenerateSecretString:
          SecretStringTemplate: '{"username": "admin"}'
          GenerateStringKey: "password"
          PasswordLength: 16
          ExcludeCharacters: '"@/\'
    Aurora:
      Type: AWS::RDS::DBCluster
      Properties:
        DBClusterParameterGroupName: !Ref DBClusterParameterGroup
        DBClusterIdentifier: ${self:custom.db_id}
        EnableHttpEndpoint: true
        MasterUsername:
          !Join [
            "",
            [
              "{{resolve:secretsmanager:",
              !Ref SecretAurora,
              ":SecretString:username}}",
            ],
          ]
        MasterUserPassword:
          !Join [
            "",
            [
              "{{resolve:secretsmanager:",
              !Ref SecretAurora,
              ":SecretString:password}}",
            ],
          ]
        Engine: aurora
        EngineMode: serverless
        ScalingConfiguration:
          AutoPause: true
          MaxCapacity: 8
          MinCapacity: 1
          SecondsUntilAutoPause: 3600
    DBClusterParameterGroup:
      Type: AWS::RDS::DBClusterParameterGroup
      Properties:
        Description: develpment database
        Family: aurora5.6
        Parameters:
          character_set_client: utf8mb4
          character_set_connection: utf8mb4
          character_set_database: utf8mb4
          character_set_results: utf8mb4
          character_set_server: utf8mb4
          time_zone: Asia/Tokyo

functions:
  rest:
    handler: src/index.handler
    events:
      - http:
          path: /api
          method: ANY
      - http:
          path: /api/{proxy+}
          method: ANY

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-esbuild
